version: "3"
services:
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./client/build:/usr/share/nginx/html:ro
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - node-app
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  node-app:
    build:
      context: ./server
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      - MONGO_USER=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - SECRET=${SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - PUBLIC_VAPID_KEY=${PUBLIC_VAPID_KEY}
      - PRIVATE_VAPID_KEY=${PRIVATE_VAPID_KEY}
      - PORT=4000
      - NOTIFICATION=dontSend
    restart: unless-stopped
    depends_on:
      - mongo
  node-app-notifications:
    build:
      context: ./server
      args:
        NODE_ENV: production
    environment:
      - NODE_ENV=production
      - MONGO_USER=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - SECRET=${SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - PUBLIC_VAPID_KEY=${PUBLIC_VAPID_KEY}
      - PRIVATE_VAPID_KEY=${PRIVATE_VAPID_KEY}
      - PORT=4001
      - NOTIFICATION=sends
    restart: unless-stopped
    depends_on:
      - mongo
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    restart: unless-stopped
    volumes:
      - mongoDb:/data/db
volumes:
  mongoDb:
